//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace toofz.NecroDancer.Web.Api.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("toofz.NecroDancer.Web.Api.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 216,
        ///  &quot;enemies&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;armadillo&quot;,
        ///      &quot;type&quot;: 1,
        ///      &quot;display_name&quot;: &quot;White Armadillo&quot;,
        ///      &quot;health&quot;: 1,
        ///      &quot;damage&quot;: 2,
        ///      &quot;beats_per_move&quot;: 1,
        ///      &quot;drops&quot;: 2
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;armadillo&quot;,
        ///      &quot;type&quot;: 2,
        ///      &quot;display_name&quot;: &quot;Yellow Armadillo&quot;,
        ///      &quot;health&quot;: 2,
        ///      &quot;damage&quot;: 3,
        ///      &quot;beats_per_move&quot;: 1,
        ///      &quot;drops&quot;: 5
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;armadillo&quot;,
        ///      &quot;type&quot;: 3,
        ///      &quot;display_name&quot;: &quot;Orange Armadillo&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetEnemies {
            get {
                return ResourceManager.GetString("GetEnemies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 37,
        ///  &quot;enemies&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;bishop&quot;,
        ///      &quot;type&quot;: 1,
        ///      &quot;display_name&quot;: &quot;Bishop&quot;,
        ///      &quot;health&quot;: 1,
        ///      &quot;damage&quot;: 2,
        ///      &quot;beats_per_move&quot;: 4,
        ///      &quot;drops&quot;: 2
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;bishop&quot;,
        ///      &quot;type&quot;: 2,
        ///      &quot;display_name&quot;: &quot;Red Bishop&quot;,
        ///      &quot;health&quot;: 2,
        ///      &quot;damage&quot;: 2,
        ///      &quot;beats_per_move&quot;: 4,
        ///      &quot;drops&quot;: 2
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;conductor&quot;,
        ///      &quot;type&quot;: 1,
        ///      &quot;display_name&quot;: &quot;The Conductor&quot;,
        ///      &quot;health&quot;: 5,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetEnemiesByAttribute {
            get {
                return ResourceManager.GetString("GetEnemiesByAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 291,
        ///  &quot;items&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;addchest_black&quot;,
        ///      &quot;display_name&quot;: &quot;+1 Black Chest per Run&quot;,
        ///      &quot;slot&quot;: null,
        ///      &quot;unlock&quot;: 4,
        ///      &quot;cost&quot;: null
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;addchest_red&quot;,
        ///      &quot;display_name&quot;: &quot;+1 Red Chest per Run&quot;,
        ///      &quot;slot&quot;: null,
        ///      &quot;unlock&quot;: 1,
        ///      &quot;cost&quot;: null
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;addchest_white&quot;,
        ///      &quot;display_name&quot;: &quot;+1 Purple Chest per Run&quot;,
        ///      &quot;slot&quot;: null,
        ///      &quot;unlock&quot;: 2,
        ///      &quot;cost&quot;: null
        ///    },
        ///    {
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetItems {
            get {
                return ResourceManager.GetString("GetItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 10,
        ///  &quot;items&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;armor_chainmail&quot;,
        ///      &quot;display_name&quot;: &quot;Chainmail&quot;,
        ///      &quot;slot&quot;: &quot;body&quot;,
        ///      &quot;unlock&quot;: 2,
        ///      &quot;cost&quot;: 60
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;armor_gi&quot;,
        ///      &quot;display_name&quot;: &quot;Karate Gi&quot;,
        ///      &quot;slot&quot;: &quot;body&quot;,
        ///      &quot;unlock&quot;: 3,
        ///      &quot;cost&quot;: 40
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;armor_glass&quot;,
        ///      &quot;display_name&quot;: &quot;Glass Armor&quot;,
        ///      &quot;slot&quot;: &quot;body&quot;,
        ///      &quot;unlock&quot;: 4,
        ///      &quot;cost&quot;: 50
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;armor_heavyglass&quot;,
        ///      &quot;d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetItemsByCategory {
            get {
                return ResourceManager.GetString("GetItemsByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 6,
        ///  &quot;items&quot;: [
        ///    {
        ///      &quot;name&quot;: &quot;weapon_blood_bow&quot;,
        ///      &quot;display_name&quot;: &quot;Blood Bow&quot;,
        ///      &quot;slot&quot;: &quot;weapon&quot;,
        ///      &quot;unlock&quot;: null,
        ///      &quot;cost&quot;: 250
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;weapon_bow&quot;,
        ///      &quot;display_name&quot;: &quot;Bow&quot;,
        ///      &quot;slot&quot;: &quot;weapon&quot;,
        ///      &quot;unlock&quot;: null,
        ///      &quot;cost&quot;: 150
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;weapon_glass_bow&quot;,
        ///      &quot;display_name&quot;: &quot;Glass Bow&quot;,
        ///      &quot;slot&quot;: &quot;weapon&quot;,
        ///      &quot;unlock&quot;: null,
        ///      &quot;cost&quot;: 400
        ///    },
        ///    {
        ///      &quot;name&quot;: &quot;weapon_gold [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetItemsBySubcategory {
            get {
                return ResourceManager.GetString("GetItemsBySubcategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 178,
        ///  &quot;leaderboards&quot;: [
        ///    {
        ///      &quot;id&quot;: 2047616,
        ///      &quot;updated_at&quot;: &quot;2017-12-01T02:57:25.72Z&quot;,
        ///      &quot;name&quot;: &quot;DLC HARDCORE All Chars_PROD&quot;,
        ///      &quot;display_name&quot;: &quot;All Characters Score (Amplified)&quot;,
        ///      &quot;production&quot;: true,
        ///      &quot;product&quot;: &quot;amplified&quot;,
        ///      &quot;_product&quot;: {
        ///        &quot;id&quot;: 1,
        ///        &quot;name&quot;: &quot;amplified&quot;,
        ///        &quot;display_name&quot;: &quot;Amplified&quot;
        ///      },
        ///      &quot;mode&quot;: &quot;standard&quot;,
        ///      &quot;_mode&quot;: {
        ///        &quot;id&quot;: 0,
        ///        &quot;name&quot;: &quot;standard&quot;,
        ///        &quot;display_name&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetLeaderboards {
            get {
                return ResourceManager.GetString("GetLeaderboards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;player&quot;: {
        ///    &quot;id&quot;: &quot;76561198036838485&quot;,
        ///    &quot;updated_at&quot;: &quot;2017-11-30T21:20:24.3Z&quot;,
        ///    &quot;display_name&quot;: &quot;ProblemsIRL&quot;,
        ///    &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/a1/a104b64997bbb443fb142d3598d92ac57f280cdc.jpg&quot;
        ///  }
        ///}.
        /// </summary>
        internal static string GetPlayer {
            get {
                return ResourceManager.GetString("GetPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;player&quot;: {
        ///    &quot;id&quot;: &quot;76561198044686391&quot;,
        ///    &quot;updated_at&quot;: &quot;2017-11-30T22:22:08.957Z&quot;,
        ///    &quot;display_name&quot;: &quot;zqxinran&quot;,
        ///    &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/19/19880b87345afb204779862d69fca74bd85bb4c7.jpg&quot;
        ///  },
        ///  &quot;total&quot;: 1078,
        ///  &quot;entries&quot;: [
        ///    {
        ///      &quot;leaderboard&quot;: {
        ///        &quot;id&quot;: 391760,
        ///        &quot;updated_at&quot;: &quot;2017-12-01T02:48:33.407Z&quot;,
        ///        &quot;name&quot;: &quot;30/7/2014&quot;,
        ///        &quot;display_name&quot;: &quot;Daily (2014-07-30) (Early Access)&quot;,
        ///        &quot;pr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayerDailyEntries {
            get {
                return ResourceManager.GetString("GetPlayerDailyEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;player&quot;: {
        ///    &quot;id&quot;: &quot;76561198044686391&quot;,
        ///    &quot;updated_at&quot;: &quot;2017-11-30T22:22:08.957Z&quot;,
        ///    &quot;display_name&quot;: &quot;zqxinran&quot;,
        ///    &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/19/19880b87345afb204779862d69fca74bd85bb4c7.jpg&quot;
        ///  },
        ///  &quot;total&quot;: 2,
        ///  &quot;entries&quot;: [
        ///    {
        ///      &quot;leaderboard&quot;: {
        ///        &quot;id&quot;: 742742,
        ///        &quot;updated_at&quot;: &quot;2017-12-01T02:53:29.457Z&quot;,
        ///        &quot;name&quot;: &quot;23/4/2015_PROD&quot;,
        ///        &quot;display_name&quot;: &quot;Daily (2015-04-23)&quot;,
        ///        &quot;production&quot;: tr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayerDailyEntriesFilteredByLeaderboardIds {
            get {
                return ResourceManager.GetString("GetPlayerDailyEntriesFilteredByLeaderboardIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;leaderboard&quot;: {
        ///    &quot;id&quot;: 742742,
        ///    &quot;updated_at&quot;: &quot;2017-12-01T02:53:29.457Z&quot;,
        ///    &quot;name&quot;: &quot;23/4/2015_PROD&quot;,
        ///    &quot;display_name&quot;: &quot;Daily (2015-04-23)&quot;,
        ///    &quot;production&quot;: true,
        ///    &quot;product&quot;: &quot;classic&quot;,
        ///    &quot;_product&quot;: {
        ///      &quot;id&quot;: 0,
        ///      &quot;name&quot;: &quot;classic&quot;,
        ///      &quot;display_name&quot;: &quot;Classic&quot;
        ///    },
        ///    &quot;date&quot;: &quot;2015-04-23T00:00:00Z&quot;,
        ///    &quot;total&quot;: 3
        ///  },
        ///  &quot;player&quot;: {
        ///    &quot;id&quot;: &quot;76561198044686391&quot;,
        ///    &quot;updated_at&quot;: &quot;2017-11-30T22:22:08.957Z&quot;,
        ///    &quot;display_name&quot;: &quot;zqxinran&quot;,
        ///    &quot;avat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayerDailyEntry {
            get {
                return ResourceManager.GetString("GetPlayerDailyEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;player&quot;: {
        ///    &quot;id&quot;: &quot;76561197976996341&quot;,
        ///    &quot;updated_at&quot;: &quot;2017-12-01T01:56:26.79Z&quot;,
        ///    &quot;display_name&quot;: &quot;JP73&quot;,
        ///    &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/fe/fef49e7fa7e1997310d705b2a6158ff8dc1cdfeb.jpg&quot;
        ///  },
        ///  &quot;total&quot;: 19,
        ///  &quot;entries&quot;: [
        ///    {
        ///      &quot;leaderboard&quot;: {
        ///        &quot;id&quot;: 2047569,
        ///        &quot;updated_at&quot;: &quot;2017-12-01T02:57:26.483Z&quot;,
        ///        &quot;name&quot;: &quot;DLC HARDCORE_PROD&quot;,
        ///        &quot;display_name&quot;: &quot;Cadence Score (Amplified)&quot;,
        ///        &quot;producti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayerEntries {
            get {
                return ResourceManager.GetString("GetPlayerEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;player&quot;: {
        ///    &quot;id&quot;: &quot;76561197999613276&quot;,
        ///    &quot;updated_at&quot;: &quot;2017-12-01T01:45:59.373Z&quot;,
        ///    &quot;display_name&quot;: &quot;Rhythm&quot;,
        ///    &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/19/19cd70495f0dbe6b2462e1a0c1b63677634f81ed.jpg&quot;
        ///  },
        ///  &quot;total&quot;: 2,
        ///  &quot;entries&quot;: [
        ///    {
        ///      &quot;leaderboard&quot;: {
        ///        &quot;id&quot;: 2047515,
        ///        &quot;updated_at&quot;: &quot;2017-12-01T02:57:26.593Z&quot;,
        ///        &quot;name&quot;: &quot;DLC HARDCORE Diamond_PROD&quot;,
        ///        &quot;display_name&quot;: &quot;Diamond Score (Amplified)&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayerEntriesFilteredByLeaderboardIds {
            get {
                return ResourceManager.GetString("GetPlayerEntriesFilteredByLeaderboardIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;leaderboard&quot;: {
        ///    &quot;id&quot;: 739999,
        ///    &quot;updated_at&quot;: &quot;2017-12-01T02:57:15.027Z&quot;,
        ///    &quot;name&quot;: &quot;HARDCORE_PROD&quot;,
        ///    &quot;display_name&quot;: &quot;Cadence Score&quot;,
        ///    &quot;production&quot;: true,
        ///    &quot;product&quot;: &quot;classic&quot;,
        ///    &quot;_product&quot;: {
        ///      &quot;id&quot;: 0,
        ///      &quot;name&quot;: &quot;classic&quot;,
        ///      &quot;display_name&quot;: &quot;Classic&quot;
        ///    },
        ///    &quot;mode&quot;: &quot;standard&quot;,
        ///    &quot;_mode&quot;: {
        ///      &quot;id&quot;: 0,
        ///      &quot;name&quot;: &quot;standard&quot;,
        ///      &quot;display_name&quot;: &quot;Standard&quot;
        ///    },
        ///    &quot;run&quot;: &quot;score&quot;,
        ///    &quot;_run&quot;: {
        ///      &quot;id&quot;: 0,
        ///      &quot;name&quot;: &quot;score&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayerEntry {
            get {
                return ResourceManager.GetString("GetPlayerEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 9,
        ///  &quot;players&quot;: [
        ///    {
        ///      &quot;id&quot;: &quot;76561198097897774&quot;,
        ///      &quot;updated_at&quot;: &quot;2017-12-01T00:23:34.85Z&quot;,
        ///      &quot;display_name&quot;: &quot;MORPHIN3&quot;,
        ///      &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/fe/fe4d9c2cd1ab00b2a51c100e5bcaacea6430e6e8.jpg&quot;
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;76561198055894548&quot;,
        ///      &quot;updated_at&quot;: &quot;2017-11-30T21:22:52.053Z&quot;,
        ///      &quot;display_name&quot;: &quot;Master Shan&quot;,
        ///      &quot;avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPlayers {
            get {
                return ResourceManager.GetString("GetPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;total&quot;: 32536,
        ///  &quot;replays&quot;: [
        ///    {
        ///      &quot;id&quot;: &quot;23989221207437736&quot;,
        ///      &quot;error&quot;: null,
        ///      &quot;seed&quot;: null,
        ///      &quot;version&quot;: 75,
        ///      &quot;killed_by&quot;: &quot;BLACK ARMORED SKELETON&quot;
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;23989221207703107&quot;,
        ///      &quot;error&quot;: null,
        ///      &quot;seed&quot;: null,
        ///      &quot;version&quot;: 75,
        ///      &quot;killed_by&quot;: &quot;WIGHT&quot;
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;23989316642522232&quot;,
        ///      &quot;error&quot;: null,
        ///      &quot;seed&quot;: null,
        ///      &quot;version&quot;: 75,
        ///      &quot;killed_by&quot;: null
        ///    },
        ///    {
        ///      &quot;id&quot;: &quot;23989316642616 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetReplays {
            get {
                return ResourceManager.GetString("GetReplays", resourceCulture);
            }
        }
    }
}
