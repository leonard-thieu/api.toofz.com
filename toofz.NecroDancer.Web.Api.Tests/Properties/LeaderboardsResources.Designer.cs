//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace toofz.NecroDancer.Web.Api.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LeaderboardsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LeaderboardsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("toofz.NecroDancer.Web.Api.Tests.Properties.LeaderboardsResources", typeof(LeaderboardsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;CharacterId&quot;: -4,
        ///    &quot;Name&quot;: &quot;all-characters-amplified&quot;,
        ///    &quot;DisplayName&quot;: &quot;All Characters (Amplified)&quot;
        ///  },
        ///  {
        ///    &quot;CharacterId&quot;: -3,
        ///    &quot;Name&quot;: &quot;all-characters&quot;,
        ///    &quot;DisplayName&quot;: &quot;All Characters&quot;
        ///  },
        ///  {
        ///    &quot;CharacterId&quot;: -2,
        ///    &quot;Name&quot;: &quot;story-mode&quot;,
        ///    &quot;DisplayName&quot;: &quot;Story Mode&quot;
        ///  },
        ///  {
        ///    &quot;CharacterId&quot;: 0,
        ///    &quot;Name&quot;: &quot;cadence&quot;,
        ///    &quot;DisplayName&quot;: &quot;Cadence&quot;
        ///  },
        ///  {
        ///    &quot;CharacterId&quot;: 1,
        ///    &quot;Name&quot;: &quot;melody&quot;,
        ///    &quot;DisplayName&quot;: &quot;Melody&quot;
        ///  },
        ///  {
        ///    &quot;Ch [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Characters {
            get {
                return ResourceManager.GetString("Characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;LeaderboardId&quot;: 391760,
        ///    &quot;Leaderboard&quot;: null,
        ///    &quot;Rank&quot;: 34,
        ///    &quot;SteamId&quot;: 76561198044686391,
        ///    &quot;Player&quot;: null,
        ///    &quot;ReplayId&quot;: 44226880707427509,
        ///    &quot;Replay&quot;: null,
        ///    &quot;Score&quot;: 1303,
        ///    &quot;Zone&quot;: 2,
        ///    &quot;Level&quot;: 1
        ///  },
        ///  {
        ///    &quot;LeaderboardId&quot;: 394529,
        ///    &quot;Leaderboard&quot;: null,
        ///    &quot;Rank&quot;: 27,
        ///    &quot;SteamId&quot;: 76561198044686391,
        ///    &quot;Player&quot;: null,
        ///    &quot;ReplayId&quot;: 44226971379751992,
        ///    &quot;Replay&quot;: null,
        ///    &quot;Score&quot;: 1405,
        ///    &quot;Zone&quot;: 2,
        ///    &quot;Level&quot;: 1
        ///  },
        ///  {
        ///    &quot;L [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DailyEntries {
            get {
                return ResourceManager.GetString("DailyEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;LeaderboardId&quot;: 391760,
        ///    &quot;Entries&quot;: [],
        ///    &quot;LastUpdate&quot;: &quot;2017-12-01T02:48:33.407&quot;,
        ///    &quot;Name&quot;: &quot;30/7/2014&quot;,
        ///    &quot;DisplayName&quot;: &quot;Daily (2014-07-30) (Early Access)&quot;,
        ///    &quot;IsProduction&quot;: false,
        ///    &quot;Product&quot;: null,
        ///    &quot;ProductId&quot;: 0,
        ///    &quot;Date&quot;: &quot;2014-07-30T00:00:00&quot;
        ///  },
        ///  {
        ///    &quot;LeaderboardId&quot;: 394529,
        ///    &quot;Entries&quot;: [],
        ///    &quot;LastUpdate&quot;: &quot;2017-12-01T02:28:30.467&quot;,
        ///    &quot;Name&quot;: &quot;31/7/2014&quot;,
        ///    &quot;DisplayName&quot;: &quot;Daily (2014-07-31) (Early Access)&quot;,
        ///    &quot;IsProduction&quot;: false,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DailyLeaderboards {
            get {
                return ResourceManager.GetString("DailyLeaderboards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;LeaderboardId&quot;: 739792,
        ///    &quot;Leaderboard&quot;: null,
        ///    &quot;Rank&quot;: 3733,
        ///    &quot;SteamId&quot;: 76561198044686391,
        ///    &quot;Player&quot;: null,
        ///    &quot;ReplayId&quot;: 529517645745373954,
        ///    &quot;Replay&quot;: null,
        ///    &quot;Score&quot;: 1618,
        ///    &quot;Zone&quot;: 4,
        ///    &quot;Level&quot;: 3
        ///  },
        ///  {
        ///    &quot;LeaderboardId&quot;: 739795,
        ///    &quot;Leaderboard&quot;: null,
        ///    &quot;Rank&quot;: 2563,
        ///    &quot;SteamId&quot;: 76561198044686391,
        ///    &quot;Player&quot;: null,
        ///    &quot;ReplayId&quot;: 527261519573856792,
        ///    &quot;Replay&quot;: null,
        ///    &quot;Score&quot;: 5696,
        ///    &quot;Zone&quot;: 4,
        ///    &quot;Level&quot;: 6
        ///  },
        ///  {
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Entries {
            get {
                return ResourceManager.GetString("Entries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;LeaderboardId&quot;: 739792,
        ///    &quot;Entries&quot;: [],
        ///    &quot;LastUpdate&quot;: &quot;2017-12-01T02:57:14.453&quot;,
        ///    &quot;Name&quot;: &quot;HARDCORE Eli_PROD&quot;,
        ///    &quot;DisplayName&quot;: &quot;Eli Score&quot;,
        ///    &quot;IsProduction&quot;: true,
        ///    &quot;Product&quot;: null,
        ///    &quot;ProductId&quot;: 0,
        ///    &quot;Mode&quot;: null,
        ///    &quot;ModeId&quot;: 0,
        ///    &quot;Run&quot;: null,
        ///    &quot;RunId&quot;: 0,
        ///    &quot;Character&quot;: null,
        ///    &quot;CharacterId&quot;: 4,
        ///    &quot;IsCoOp&quot;: false,
        ///    &quot;IsCustomMusic&quot;: false
        ///  },
        ///  {
        ///    &quot;LeaderboardId&quot;: 739795,
        ///    &quot;Entries&quot;: [],
        ///    &quot;LastUpdate&quot;: &quot;2017-12-01T02:57:14.23 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Leaderboards {
            get {
                return ResourceManager.GetString("Leaderboards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;ModeId&quot;: 0,
        ///    &quot;Name&quot;: &quot;standard&quot;,
        ///    &quot;DisplayName&quot;: &quot;Standard&quot;
        ///  },
        ///  {
        ///    &quot;ModeId&quot;: 1,
        ///    &quot;Name&quot;: &quot;no-return&quot;,
        ///    &quot;DisplayName&quot;: &quot;No Return&quot;
        ///  },
        ///  {
        ///    &quot;ModeId&quot;: 2,
        ///    &quot;Name&quot;: &quot;hard&quot;,
        ///    &quot;DisplayName&quot;: &quot;Hard&quot;
        ///  },
        ///  {
        ///    &quot;ModeId&quot;: 3,
        ///    &quot;Name&quot;: &quot;phasing&quot;,
        ///    &quot;DisplayName&quot;: &quot;Phasing&quot;
        ///  },
        ///  {
        ///    &quot;ModeId&quot;: 4,
        ///    &quot;Name&quot;: &quot;randomizer&quot;,
        ///    &quot;DisplayName&quot;: &quot;Randomizer&quot;
        ///  },
        ///  {
        ///    &quot;ModeId&quot;: 5,
        ///    &quot;Name&quot;: &quot;mystery&quot;,
        ///    &quot;DisplayName&quot;: &quot;Mystery&quot;
        ///  }
        ///].
        /// </summary>
        internal static string Modes {
            get {
                return ResourceManager.GetString("Modes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;SteamId&quot;: 76561198044686391,
        ///    &quot;Entries&quot;: [],
        ///    &quot;DailyEntries&quot;: [],
        ///    &quot;LastUpdate&quot;: &quot;2017-11-30T22:22:08.957&quot;,
        ///    &quot;Exists&quot;: true,
        ///    &quot;Name&quot;: &quot;zqxinran&quot;,
        ///    &quot;Avatar&quot;: &quot;https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/19/19880b87345afb204779862d69fca74bd85bb4c7.jpg&quot;
        ///  },
        ///  {
        ///    &quot;SteamId&quot;: 76561198070596881,
        ///    &quot;Entries&quot;: [],
        ///    &quot;DailyEntries&quot;: [],
        ///    &quot;LastUpdate&quot;: &quot;2017-11-30T22:36:05.697&quot;,
        ///    &quot;Exists&quot;: true,
        ///    &quot;Name&quot;: &quot;indeblotzki&quot;,
        ///    &quot;Avatar&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Players {
            get {
                return ResourceManager.GetString("Players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;ProductId&quot;: 0,
        ///    &quot;Name&quot;: &quot;classic&quot;,
        ///    &quot;DisplayName&quot;: &quot;Classic&quot;
        ///  },
        ///  {
        ///    &quot;ProductId&quot;: 1,
        ///    &quot;Name&quot;: &quot;amplified&quot;,
        ///    &quot;DisplayName&quot;: &quot;Amplified&quot;
        ///  }
        ///].
        /// </summary>
        internal static string Products {
            get {
                return ResourceManager.GetString("Products", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;ReplayId&quot;: 529517645745373954,
        ///    &quot;ErrorCode&quot;: null,
        ///    &quot;Seed&quot;: null,
        ///    &quot;Version&quot;: 75,
        ///    &quot;KilledBy&quot;: &quot;SHOPKEEPER&quot;,
        ///    &quot;Uri&quot;: null
        ///  },
        ///  {
        ///    &quot;ReplayId&quot;: 527261519573856792,
        ///    &quot;ErrorCode&quot;: null,
        ///    &quot;Seed&quot;: null,
        ///    &quot;Version&quot;: 69,
        ///    &quot;KilledBy&quot;: &quot;FIREBALL&quot;,
        ///    &quot;Uri&quot;: null
        ///  },
        ///  {
        ///    &quot;ReplayId&quot;: 527261519573857253,
        ///    &quot;ErrorCode&quot;: null,
        ///    &quot;Seed&quot;: null,
        ///    &quot;Version&quot;: 69,
        ///    &quot;KilledBy&quot;: &quot;FIREBALL&quot;,
        ///    &quot;Uri&quot;: null
        ///  },
        ///  {
        ///    &quot;ReplayId&quot;: 458589121599837 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Replays {
            get {
                return ResourceManager.GetString("Replays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;RunId&quot;: 0,
        ///    &quot;Name&quot;: &quot;score&quot;,
        ///    &quot;DisplayName&quot;: &quot;Score&quot;
        ///  },
        ///  {
        ///    &quot;RunId&quot;: 1,
        ///    &quot;Name&quot;: &quot;speed&quot;,
        ///    &quot;DisplayName&quot;: &quot;Speed&quot;
        ///  },
        ///  {
        ///    &quot;RunId&quot;: 2,
        ///    &quot;Name&quot;: &quot;seeded-score&quot;,
        ///    &quot;DisplayName&quot;: &quot;Seeded Score&quot;
        ///  },
        ///  {
        ///    &quot;RunId&quot;: 3,
        ///    &quot;Name&quot;: &quot;seeded-speed&quot;,
        ///    &quot;DisplayName&quot;: &quot;Seeded Speed&quot;
        ///  },
        ///  {
        ///    &quot;RunId&quot;: 4,
        ///    &quot;Name&quot;: &quot;deathless&quot;,
        ///    &quot;DisplayName&quot;: &quot;Deathless&quot;
        ///  }
        ///].
        /// </summary>
        internal static string Runs {
            get {
                return ResourceManager.GetString("Runs", resourceCulture);
            }
        }
    }
}
