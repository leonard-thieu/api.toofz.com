//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace toofz.NecroDancer.Web.Api.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NecroDancerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NecroDancerResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("toofz.NecroDancer.Web.Api.Tests.Properties.NecroDancerResources", typeof(NecroDancerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;Name&quot;: &quot;armadillo&quot;,
        ///    &quot;Type&quot;: 1,
        ///    &quot;Id&quot;: 110,
        ///    &quot;FriendlyName&quot;: &quot;White Armadillo&quot;,
        ///    &quot;LevelEditor&quot;: true,
        ///    &quot;SpriteSheet&quot;: null,
        ///    &quot;Frames&quot;: [],
        ///    &quot;Shadow&quot;: null,
        ///    &quot;Stats&quot;: {
        ///      &quot;BeatsPerMove&quot;: 1,
        ///      &quot;CoinsToDrop&quot;: 2,
        ///      &quot;DamagePerHit&quot;: 2,
        ///      &quot;Health&quot;: 1,
        ///      &quot;Movement&quot;: &quot;custom&quot;,
        ///      &quot;Priority&quot;: 0
        ///    },
        ///    &quot;OptionalStats&quot;: {
        ///      &quot;Boss&quot;: false,
        ///      &quot;BounceOnMovementFail&quot;: false,
        ///      &quot;Floating&quot;: false,
        ///      &quot;IgnoreLiquids&quot;: false,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Enemies {
            get {
                return ResourceManager.GetString("Enemies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;Name&quot;: &quot;addchest_black&quot;,
        ///    &quot;ImagePath&quot;: &quot;addchest_black.png&quot;,
        ///    &quot;Bouncer&quot;: true,
        ///    &quot;ChestChance&quot;: null,
        ///    &quot;CoinCost&quot;: null,
        ///    &quot;Consumable&quot;: false,
        ///    &quot;Cooldown&quot;: null,
        ///    &quot;Data&quot;: null,
        ///    &quot;DiamondCost&quot;: 4,
        ///    &quot;DiamondDealable&quot;: null,
        ///    &quot;Flyaway&quot;: null,
        ///    &quot;FrameCount&quot;: 1,
        ///    &quot;FromTransmute&quot;: null,
        ///    &quot;HideQuantity&quot;: false,
        ///    &quot;Hint&quot;: null,
        ///    &quot;ImageHeight&quot;: 24,
        ///    &quot;ImageWidth&quot;: 24,
        ///    &quot;IsArmor&quot;: false,
        ///    &quot;IsAxe&quot;: false,
        ///    &quot;IsBlood&quot;: false,
        ///    &quot;IsB [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Items {
            get {
                return ResourceManager.GetString("Items", resourceCulture);
            }
        }
    }
}
